`timescale 1ns / 1ps

module tb_Normal_Mode();

    // Declaración de señales
    reg clk;                         // Señal de reloj
    reg reset;                       // Señal de reinicio
    reg [31:0] TIMER_CNT;            // Contador actual
    reg [31:0] TIMER_TOP;            // Valor límite del contador
    wire interrupt;                  // Señal de interrupción (salida)

    // Instancia del módulo Normal_Mode
    Normal_Mode uut (
        .clk(clk),
        .reset(reset),
        .TIMER_CNT(TIMER_CNT),
        .TIMER_TOP(TIMER_TOP),
        .interrupt(interrupt)
    );

    // Generación del reloj
    initial begin
        clk = 0;
        forever #5 clk = ~clk; // Periodo del reloj: 10 ns (frecuencia: 100 MHz)
    end

    // Proceso de estímulos
    initial begin
        // Inicialización de señales
        reset = 1;                   // Activa el reset
        TIMER_CNT = 0;               // Contador inicial
        TIMER_TOP = 10;              // Valor máximo inicial del contador

        // Liberar el reset después de 20 ns
        #20 reset = 0;

        // Simular el incremento del contador
        #10;                         // Esperar 10 ns antes de comenzar
        forever #10 TIMER_CNT = (TIMER_CNT == TIMER_TOP) ? 0 : TIMER_CNT + 1;
    end

    // Monitor para observar las señales
    initial begin
        $monitor("Time: %0dns | clk: %b | reset: %b | TIMER_CNT: %d | TIMER_TOP: %d | interrupt: %b",
                 $time, clk, reset, TIMER_CNT, TIMER_TOP, interrupt);
    end

    // Configuración para generación de archivo VCD
    initial begin
        $dumpfile("Mnormal.vcd"); // Nombre del archivo VCD
        $dumpvars(0, tb_Normal_Mode);    // Niveles de señales a registrar (0 = todos)
    end

    // Finalizar simulación tras un tiempo específico
    initial begin
        #200 $finish; // Detiene la simulación después de 200 ns
    end

endmodule
